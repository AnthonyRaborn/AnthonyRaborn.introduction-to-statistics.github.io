, prediction = lm(y ~ x) |> predict()
, error = y - prediction
, sum_error_bad = sum(bad_error)
, sum_error_best = sum(error)
, SSE_bad = sum(bad_error^2)
, SSE_best = sum(error^2)
) %>% select(sum_error_bad) %>% distinct()
height_data %>%
mutate(
# bad_prediction = 30 + 2*x
bad_prediction = -.927 + 2.471429*x
, bad_error = y - bad_prediction
, prediction = lm(y ~ x) |> predict()
, error = y - prediction
, sum_error_bad = sum(bad_error)
, sum_error_best = sum(error)
, SSE_bad = sum(bad_error^2)
, SSE_best = sum(error^2)
) %>% select(sum_error_bad) %>% distinct()
height_data %>%
mutate(
# bad_prediction = 30 + 2*x
bad_prediction = -.9275 + 2.471429*x
, bad_error = y - bad_prediction
, prediction = lm(y ~ x) |> predict()
, error = y - prediction
, sum_error_bad = sum(bad_error)
, sum_error_best = sum(error)
, SSE_bad = sum(bad_error^2)
, SSE_best = sum(error^2)
) %>% select(sum_error_bad) %>% distinct()
height_data %>%
mutate(
# bad_prediction = 30 + 2*x
bad_prediction = -.9276 + 2.471429*x
, bad_error = y - bad_prediction
, prediction = lm(y ~ x) |> predict()
, error = y - prediction
, sum_error_bad = sum(bad_error)
, sum_error_best = sum(error)
, SSE_bad = sum(bad_error^2)
, SSE_best = sum(error^2)
) %>% select(sum_error_bad) %>% distinct()
height_data <-
height_data %>%
mutate(
# bad_prediction = 30 + 2*x
bad_prediction = -.9276 + 2.471429*x
, bad_error = y - bad_prediction
, prediction = lm(y ~ x) |> predict()
, error = y - prediction
, sum_error_bad = sum(bad_error)
, sum_error_best = sum(error)
, SSE_bad = sum(bad_error^2)
, SSE_best = sum(error^2)
)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
#| label: sample-both-fits-height-data
#| fig-cap: 'Male College Students Height (x) and Weight (y)'
#| fig-subcap: 'With Best Fit in Blue and "Bad" Fit in Red'
sum_error_text <-
paste0(
"\nS(e) for the red line: "
, height_data$sum_error_bad[1] |> round(digits = 1)
, "\nS(e) for the blue line: "
, height_data$sum_error_best[1] |> round(digits = 1)
, "\nSS(e) for the red line: "
, height_data$SSE_bad[1] |> round(digits = 1)
, "\nSS(e) for the blue line: "
, height_data$SSE_best[1] |> round(digits = 1)
)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = prediction), color = 'blue', alpha = .5) +
geom_linerange(aes(ymax = y, ymin = bad_prediction), color = 'red', alpha = .5) +
geom_text(
x = 75
, y = 160
, label = sum_error_text) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
ggplot(
mapping = aes(x = x, y = y)
) +
geom_point() +
xlab('Height (inches)') +
ylab('Weight (pounds)') +
theme_bw()
height_data <-
tibble(x = x
, y = y
)
height_data <-
height_data %>%
mutate(
# bad_prediction = 30 + 2*x
bad_prediction = -.9276 + 2.471429*x
, bad_error = y - bad_prediction
, prediction = lm(y ~ x) |> predict()
, error = y - prediction
, sum_error_bad = sum(bad_error)
, sum_error_best = sum(error)
, SSE_bad = sum(bad_error^2)
, SSE_best = sum(error^2)
)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = prediction), color = 'blue', alpha = .5) +
geom_linerange(aes(ymax = y, ymin = bad_prediction), color = 'red', alpha = .5) +
geom_text(
x = 75
, y = 160
, label = sum_error_text) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
# geom_linerange(aes(ymax = y, ymin = prediction), color = 'blue', alpha = .5) +
# geom_linerange(aes(ymax = y, ymin = bad_prediction), color = 'red', alpha = .5) +
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
# geom_linerange(aes(ymax = y, ymin = prediction), color = 'blue', alpha = .5) +
# geom_linerange(aes(ymax = y, ymin = bad_prediction), color = 'red', alpha = .5) +
geom_text(
x = 75
, y = 160
, label = sum_error_text) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
geom_abline(intercept = 50, slope = 1.75, color = 'green') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_smooth(method = 'lm', se = FALSE) +
geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
# geom_linerange(aes(ymax = y, ymin = prediction), color = 'blue', alpha = .5) +
# geom_linerange(aes(ymax = y, ymin = bad_prediction), color = 'red', alpha = .5) +
geom_text(
x = 75
, y = 160
, label = sum_error_text) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)")
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
# geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data$x |> range()
?xlim
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
# geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(62, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
# geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(61, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
# geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(61.14, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
# geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(61.14, 79.61) + ylim(150, 200)
height_data$y |> range()
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
# geom_abline(intercept = 50, slope = 1.75, color = 'blue') +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(61.14, 79.61) + ylim(155, 190.6)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(61.14, 79.61) + ylim(155, 190.6)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
# geom_abline(intercept = 30, slope = 2, color = 'red') +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_linerange(aes(ymax = y, ymin = bad_prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(155, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE) +
geom_linerange(aes(ymax = y, ymin = prediction)) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
height_data %>%
ggplot(
aes(x = x, y = y)
) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
geom_abline(intercept = -.9276, slope = 2.471429, color = 'red') +
geom_text(
x = 75
, y = 160
, label = sum_error_text) +
theme_bw() +
ylab("Weight (pounds)") +
xlab("Height (inches)") +
xlim(60, 80) + ylim(150, 200)
ggplot(
mapping = aes(x = x, y = y)
) +
geom_point() +
xlab('Height (inches)') +
ylab('Weight (pounds)') +
ggtitle('Male College Students Height (x) and Weight (y)', 'Basic scatterplot') +
theme_bw()
height_data %>%
ggplot(
mapping = aes(x = x, y = y)
) +
geom_point() +
xlab('Height (inches)') +
ylab('Weight (pounds)') +
ggtitle('Male College Students Height (x) and Weight (y)', 'Basic scatterplot') +
theme_bw()
cor(height_data$x, height_data$y)
lm(y ~ x, data = height_data)
lm(y ~ x, data = height_data)
str(lm(y ~ x, data = height_data))
lm(y ~ x, data = height_data)$coefficients
lm(y ~ x, data = height_data)$coefficients[2]
?cor
pearson_correlation <-
cor(height_data$x, height_data$y)
regression_slope <-
lm(y ~ x, data = height_data)$coefficients[2]
sqrt(
sum(
(height_data$x - mean(height_data$x))^2
)
)
numerator <-
sqrt(
sum(
(height_data$x - mean(height_data$x))^2
)
)
denominator <-
sqrt(
sum(
(height_data$y - mean(height_data$y))^2
)
)
regression_slope * (numerator/denominator)
pearson_correlation
regression_slope * (numerator/denominator)
pearson_correlation
paste0("r = ", pearson_correlation, "\nbeta_1 = ", regression_slope, "\nunits-adjustment = ", (numerator/denominator))
paste0("r = ", pearson_correlation, "\nbeta_1 = ", regression_slope, "\nunits-adjustment = ", (numerator/denominator)) |> cat()
pearson_correlation <-
cor(height_data$x, height_data$y) |>
round(3)
regression_slope <-
lm(y ~ x, data = height_data)$coefficients[2] |>
round(3)
numerator <-
sqrt(
sum(
(height_data$x - mean(height_data$x))^2
)
) |>
round(3)
denominator <-
sqrt(
sum(
(height_data$y - mean(height_data$y))^2
)
) |>
round(3)
paste0("r = ", pearson_correlation, "\nbeta_1 = ", regression_slope, "\nunits-adjustment = ", (numerator/denominator)) |> cat()
units_adjustment <-
(numerator/denominator) |> round(3)
paste0("r = ", pearson_correlation, "\nbeta_1 = ", regression_slope, "\nunits-adjustment = ", units_adjustment) |> cat()
paste0(
"r = ", pearson_correlation,
"\nbeta_1 = ", regression_slope,
"\nunits-adjustment = ", units_adjustment,
"r = beta_1 * units-adjustment?: ", beta_1*units_adjustment) |> cat()
paste0(
"r = ", pearson_correlation,
"\nbeta_1 = ", regression_slope,
"\nunits-adjustment = ", units_adjustment,
"r = beta_1 * units-adjustment?: ", regression_slope*units_adjustment) |> cat()
paste0(
"r = ", pearson_correlation,
"\nbeta_1 = ", regression_slope,
"\nunits-adjustment = ", units_adjustment,
"\nr = beta_1 * units-adjustment?: ", regression_slope*units_adjustment) |> cat()
paste0(
"r = ", pearson_correlation,
"\nbeta_1 = ", regression_slope,
"\nunits-adjustment = ", units_adjustment,
"\nr = beta_1 * units-adjustment?: ", (regression_slope*units_adjustment) |> round(3)) |>
cat()
shiny::runApp('simple-linear-regression')
coef(lm(y ~ x))
coef(lm(y ~ x)) |> str()
runApp('simple-linear-regression')
?modalDialog
runApp('simple-linear-regression')
.9^2
